- Class: meta
  Course: C8_GGplot_01
  Lesson: Aesthetics
  Author: mzl
  Type: Standard
  Organization: pkuss
  Version: 2.4.3

- Class: text
  Output: 图形属性映射是图形绘图概念语法的基石。 这就是魔法发生的地方 - 将连续的和分类的数据转换成视觉尺度，在很短的时间内提供大量的信息。
    在本章中，您将了解如何为您的数据选择最佳的图形属性映射。

- Class: text
  Output: 让我们将它们应用到一个分类变量 - 在mtcars，cyl。（当你在下一章遇到线图时，你会考虑线型）。这节练习中将看到如下应用到aes()中
    的图形属性：x, y, color, fill, size, alpha, labels 和 shape。我们将会使用mtcars数据框，在下面的练习中，您可以假设cyl列是分类的因子类型向量。
    mtcars数据框在您的工作区中可用。

- Class: cmd_question
  Output: 将mpg映射到x图形属性上，cyl映射到y上，绘制散点图。
  CorrectAnswer: ggplot(mtcars,aes(x=mpg,y=cyl))+geom_point()
  AnswerTests: omnitest(correctExpr='ggplot(mtcars,aes(x=mpg,y=cyl))+geom_point()')
  Hint: ggplot(mtcars,aes(x=mpg,y=cyl))+geom_point()

- Class: cmd_question
  Output: 改变上一个练习中的映射关系，重新绘制图形。
  CorrectAnswer: ggplot(mtcars,aes(x=cyl,y=mpg))+geom_point()
  AnswerTests: omnitest(correctExpr='ggplot(mtcars,aes(x=cyl,y=mpg))+geom_point()')
  Hint: ggplot(mtcars,aes(x=cyl,y=mpg))+geom_point()

- Class: cmd_question
  Output: 将wt映射到x，将mpg映射到y，并将其颜色color设置为cyl。将geom的shape(形状)参数更改为1并将(size)大小增加到4来修改前面的图。
    这些是您应该在geom_point()中指定的属性。
  CorrectAnswer: ggplot(mtcars,aes(x=wt,y=mpg,color=cyl))+geom_point(shape=1,size=4)
  AnswerTests: omnitest(correctExpr='ggplot(mtcars,aes(x=wt,y=mpg,color=cyl))+geom_point(shape=1,size=4)')
  Hint: ggplot(mtcars,aes(x=wt,y=mpg,color=cyl))+geom_point(shape=1,size=4)

- Class: text
  Output: 颜色color通常改变物体的外部轮廓，并且fill属性通常是内部阴影。 但是，正如在上一个练习中看到的，geom_point（）是一个例外， 
    在这里你使用color，而不是fill填充内部的点。使用哪种形状？ 默认的geom_point（）使用shape = 19（一个实心的圆，轮廓与里面的颜色相同）。 
    好的选择是shape= 1（空心）和shape= 16（实心，没有轮廓）。 上述的形状全部使用col属性（不要忘记为实心点设置alpha）。
    一个非常好的选择是shape = 21，它允许你使用fill填充内部和col绘制轮廓！ 当你想把两种属性映射到一个点时，这是一个很棒的小技巧。
    当你使用错误的属性映射会发生什么？ 这是一个非常常见的错误！

- Class: cmd_question
  Output: 将wt映射到x，将mpg映射到y，使cyl映射到fill而不是col
  CorrectAnswer: ggplot(mtcars,aes(x=wt,y=mpg,fill=cyl))+geom_point()
  AnswerTests: omnitest(correctExpr='ggplot(mtcars,aes(x=wt,y=mpg,fill=cyl))+geom_point()')
  Hint: ggplot(mtcars,aes(x=wt,y=mpg,fill=cyl))+geom_point()

- Class: cmd_question
  Output: 上一个练习中的fill映射到cyl是不是没看到效果呢。前边我们已经解释过了，在默认shape=19时，轮廓和内部填充是一样的。
    那么，在geom_point（）中将shape参数改为21，并添加一个设置为0.6的alpha参数。试试这次的效果。
  CorrectAnswer: ggplot(mtcars,aes(x=wt,y=mpg,fill=cyl))+geom_point(shape=21,alpha=0.6)
  AnswerTests: omnitest(correctExpr='ggplot(mtcars,aes(x=wt,y=mpg,fill=cyl))+geom_point(shape=21,alpha=0.6)')
  Hint: ggplot(mtcars,aes(x=wt,y=mpg,fill=cyl))+geom_point(shape=21,alpha=0.6)

- Class: cmd_question
  Output: 接上一个练习，在ggplot（）的aes中，将数据框mtcars的am映射到color
  CorrectAnswer: ggplot(mtcars,aes(x=wt,y=mpg,fill=cyl,color=am))+geom_point(shape=21,alpha=0.6)
  AnswerTests: omnitest(correctExpr='ggplot(mtcars,aes(x=wt,y=mpg,fill=cyl,color=am))+geom_point(shape=21,alpha=0.6)')
  Hint: ggplot(mtcars,aes(x=wt,y=mpg,fill=cyl,color=am))+geom_point(shape=21,alpha=0.6)

- Class: cmd_question
  Output: 使用ggplot（）来创建一个基本的散点图。 在aes（）里面，把wt映射到x和mpg到y上。 通常情况下，你会说“mpg被wt描述”或“mpg vs wt”，
    但是在aes（）中，先x，然后是y。 
  CorrectAnswer: ggplot(data=mtcars,aes(x=wt,y=mpg))+geom_point()
  AnswerTests: omnitest(correctExpr='ggplot(data=mtcars,aes(x=wt,y=mpg))+geom_point()')
  Hint: ggplot(data=mtcars,aes(x=wt,y=mpg))+geom_point()

- Class: cmd_question
  Output: 在上一个练习中的aes中添加size=cyl,geom_point采用默认参数
  CorrectAnswer: ggplot(data=mtcars,aes(x=wt,y=mpg,size=mtcars$cyl))+geom_point()
  AnswerTests: omnitest(correctExpr='ggplot(data=mtcars,aes(x=wt,y=mpg,size=mtcars$cyl))+geom_point()')
  Hint: ggplot(data=mtcars,aes(x=wt,y=mpg))+geom_point(size=mtcars$cyl)

- Class: cmd_question
  Output: 将上一个练习中的size=cyl改为alpha=size，geom_point采用默认参数
  CorrectAnswer: ggplot(data=mtcars,aes(x=wt,y=mpg,alpha=mtcars$cyl))+geom_point()
  AnswerTests: omnitest(correctExpr='ggplot(data=mtcars,aes(x=wt,y=mpg,alpha=mtcars$cyl))+geom_point()')
  Hint: ggplot(data=mtcars,aes(x=wt,y=mpg,alpha=mtcars$cyl))+geom_point()
  
- Class: cmd_question
  Output: 将上一个练习中的alpha=cyl改为shape=factor(cyl)，geom_point采用默认参数
  CorrectAnswer: ggplot(data=mtcars,aes(x=wt,y=mpg,shape=factor(cyl)))+geom_point()
  AnswerTests: omnitest(correctExpr='ggplot(data=mtcars,aes(x=wt,y=mpg,shape=factor(cyl)))+geom_point()')
  Hint: ggplot(data=mtcars,aes(x=wt,y=mpg,shape=factor(cyl)))+geom_point()
  
- Class: cmd_question
  Output: 将上一个练习中的shape=factor(cyl)改为label=cyl，geom_point采用默认参数,为了保证文字正常显示请添加geom_text()
  CorrectAnswer: ggplot(data=mtcars,aes(x=wt,y=mpg,label=cyl))+geom_point()+geom_text()
  AnswerTests: omnitest(correctExpr='ggplot(data=mtcars,aes(x=wt,y=mpg,label=cyl))+geom_point()+geom_text()')
  Hint: ggplot(data=mtcars,aes(x=wt,y=mpg,label=cyl))+geom_point()+geom_text()

- Class: text
  Output: 之前的练习中使用的图形属性：x, y, color, fill, size, alpha, label 和 shape。
    我们可以使用这些参数来设置图形的属性，而不是用在aes的参数里边。但是，有一些缺陷需要注意：这些图形属性可能会覆盖你图形的aes设置！
    关于形状：之前的练习你看到看到那个shape= 21的结果是有一个填充和一个轮廓。 R中的形状可以有1-25的值。 1-20形状只能接受颜色
    color属性，但形状21-25同时具有颜色color和填充fill属性。请参阅par（）中的pch参数以进一步讨论。
    关于十六进制颜色的一个单词：'Hexadecimal'字面意思是“与16相关”，是一个基本的16位字母数字计数系统。
    个别值来自0-9和A-F的范围。这意味着有256个可能的两位数值（即00-FF）。十六进制颜色使用六位的数值编码（#RRGGBB”）的六位数代码）
    表示一个颜色的红、绿、蓝三原色值。（例如：纯蓝色：“＃0000FF”，黑色：“＃000000”，白色“#FFFFFF”）。  R可以接受十六进制代码作为有效颜色。

- Class: cmd_question
  Output: 继续使用mtcars。 使用ggplot（）创建一个散点图：将wt映射到x，将mpg映射到y并将cyl其映射到color上
  CorrectAnswer: ggplot(mtcars,aes(x=wt,y=mpg,color=cyl))+geom_point()
  AnswerTests: omnitest(correctExpr='ggplot(mtcars,aes(x=wt,y=mpg,color=cyl))+geom_point()')
  Hint: ggplot(mtcars,aes(x=wt,y=mpg,color=cyl))+geom_point()

- Class: cmd_question
  Output: 继续承接上一题的要求，但额外的要求是在geom_point（）中使用color等于我们已经为你预定义的my_color进行点颜色的覆盖。 
    注意这是如何取消给aes中设置的有cyl决定的颜色的！
  CorrectAnswer: ggplot(mtcars,aes(x=wt,y=mpg,color=cyl))+geom_point(color=my_color)
  AnswerTests: omnitest(correctExpr='ggplot(mtcars,aes(x=wt,y=mpg,color=cyl))+geom_point(color=my_color)')
  Hint: ggplot(mtcars,aes(x=wt,y=mpg,color=cyl))+geom_point(color=my_color)

- Class: cmd_question
  Output: 继续上一题，将cyl映射到fill而不是col，geom_point（）内将属性size设置为10，shape设置为23和color设置为的my_color。
  CorrectAnswer: ggplot(mtcars,aes(x=wt,y=mpg,fill=cyl))+geom_point(size=10,shape=23,color=my_color)
  AnswerTests: omnitest(correctExpr='ggplot(mtcars,aes(x=wt,y=mpg,fill=cyl))+geom_point(size=10,shape=23,color=my_color)')
  Hint: ggplot(mtcars,aes(x=wt,y=mpg,fill=cyl))+geom_point(size=10,shape=23,color=my_color)
  
- Class: cmd_question
  Output: 承接上一个练习，使用geom_text()添加红色标记rownames(mtcars)。 注意：请记住用引号指定颜色字符，如"yellow"。
  CorrectAnswer: ggplot(mtcars,aes(x=wt,y=mpg,fill=cyl))+geom_point(size=10,shape=23,color=my_color)+geom_text(label=rownames(mtcars),color="red")
  AnswerTests: omnitest(correctExpr='ggplot(mtcars,aes(x=wt,y=mpg,fill=cyl))+geom_point(size=10,shape=23,color=my_color)+geom_text(label=rownames(mtcars),color="red")')
  Hint: ggplot(mtcars,aes(x=wt,y=mpg,fill=cyl))+geom_point(size=10,shape=23,color=my_color)+geom_text(label=rownames(mtcars),color="red")

- Class: text
  Output: 接下来我们主要讲我们如何使用ggplot图形绘制条形图。 使用 positions参数（可取"stack", "fill" and "dodge" ） 可以绘制很多不同类型的条形图。


- Class: cmd_question
  Output: 创建一个ggplot2的图形对象赋值给变量cyl.am。我们依然使用mtcars数据框，我们指定x轴为factor(cyl),fill=factor(am)。
  CorrectAnswer: cyl.am <- ggplot(mtcars,aes(x=factor(cyl),fill=factor(am)))
  AnswerTests: omnitest(correctExpr='cyl.am <- ggplot(mtcars,aes(x=factor(cyl),fill=factor(am)))')
  Hint: cyl.am <- ggplot(mtcars,aes(x=factor(cyl),fill=factor(am)))

- Class: cmd_question
  Output: 将一个geom_bar（）调用添加到cyl.am. 默认情况下，positions将被设置为“stack”。
  CorrectAnswer: cyl.am + geom_bar()
  AnswerTests: omnitest(correctExpr='cyl.am + geom_bar()')
  Hint: cyl.am + geom_bar()
  
- Class: cmd_question
  Output: 将一个geom_bar（）调用添加到cyl.am. positions将被设置为“fill”。
  CorrectAnswer: cyl.am + geom_bar(position="fill")
  AnswerTests: omnitest(correctExpr='cyl.am + geom_bar(position="fill")')
  Hint: hint
  
- Class: cmd_question
  Output: 将一个geom_bar（）调用添加到cyl.am. positions将被设置为“dodge”。
  CorrectAnswer: cyl.am + geom_bar(position="dodge")
  AnswerTests: omnitest(correctExpr='cyl.am + geom_bar(position="dodge")')
  Hint: cyl.am + geom_bar(position="dodge")

- Class: cmd_question
  Output: position="dodge"似乎是最合适的。 在上一题的命令之后添加三个scale_函数完成ggplot命令：scale_x_discrete（）指定其唯一参数为"Cylinders"。
    scale_y_continuous（）指定其唯一参数为"Number"。scale_fill_manual（）修改了了图例。 第一个参数是图例的标题："Transmission"。 
    接下来，将values和labels设置为预定义的值val和lab,它们是图例中的颜色和标签。
  CorrectAnswer: cyl.am + geom_bar(position="dodge")+scale_x_discrete("Cylinders")+scale_y_continuous("Number")+scale_fill_manual("Transmission",values=val,labels=lab)
  AnswerTests: omnitest(correctExpr='cyl.am + geom_bar(position="dodge")+scale_x_discrete("Cylinders")+scale_y_continuous("Number")+scale_fill_manual("Transmission",values=val,labels=lab)')
  Hint: cyl.am + geom_bar(position="dodge")+scale_x_discrete("Cylinders")+scale_y_continuous("Number")+scale_fill_manual("Transmission",values=val,labels=lab)

- Class: text
  Output: 设置一个虚拟的图形属性，所有可见的图形参数的设置都可以通过aes参数和属性，但是我非常方便地忽略了x和y。
    这是因为虽然你可以做单变量的图（比如直方图，你会在下一章中看到），但是Y轴总是会被提供，即使你没有要求。
    由于这是单变量数据，因此没有真正的Y轴。你可以在ggplot2中得到同样的结果，但是更麻烦一些。 你真正想要做的唯一原因就是如果你制作了
    很多图形，而你想让它们处于相同的风格，或者你想要利用图形属性映射（例如color）。

- Class: cmd_question
  Output: 要实现单变量的问题，需要映射一个值，例如 0，而不是一个变量，到y上。 指定x为mtcars数据框的mpg列，使用geom_jitter（）避免将
    所有点放在水平线上。
  CorrectAnswer: ggplot(mtcars,aes(x=mpg,y=0))+geom_jitter()
  AnswerTests: omnitest(correctExpr='ggplot(mtcars,aes(x=mpg,y=0))+geom_jitter()')
  Hint: ggplot(mtcars,aes(x=mpg,y=0))+geom_jitter()

- Class: cmd_question
  Output: 为了使一切看起来更好，除了上一个联系的代码之外，并使用适当的scale_y_continuous函数更改y轴的极限。 将limits参数设置为c（-2，2）。
  CorrectAnswer: ggplot(mtcars,aes(x=mpg,y=0))+geom_jitter()+scale_y_continuous(limits=c(-2,2))
  AnswerTests: omnitest(correctExpr='ggplot(mtcars,aes(x=mpg,y=0))+geom_jitter()+scale_y_continuous(limits=c(-2,2))')
  Hint: ggplot(mtcars,aes(x=mpg,y=0))+geom_jitter()+scale_y_continuous(limits=c(-2,2))
  
- Class: text
  Output: 到目前为止，我们主要使用的是散点图，因为它们直观，易于理解和非常普遍。任何散点图中的主要考虑因素是处理重叠绘图。
    当您有以下情况时，您必须处理重叠绘图：
    1大数据集，
    2不准确的数据和所有的点在你的图形中没有明确的分离，
    3间隔数据（即数据以固定值出现），或
    4在单一轴上对齐数据值。
    一个非常常见的技术是使用solid形状并和透明度alpha混合（即增加透明度）。另一种方法是使用空心形状。这些都是担心定位之前的调整。
  
- Class: cmd_question
  Output: 首先绘制一幅基本的散点图mtcars数据框中的mpg（y）与wt（x），将映射cyl到color,并使size= 4。将cyl转换为一个因子变量。
  CorrectAnswer: ggplot(mtcars,aes(x=wt,y=mpg,color=factor(cyl),size=4))+geom_point()
  AnswerTests: omnitest(correctExpr='ggplot(mtcars,aes(x=wt,y=mpg,color=factor(cyl),size=4))+geom_point()')
  Hint: ggplot(mtcars,aes(x=wt,y=mpg,color=factor(cyl),size=4))+geom_point()

- Class: cmd_question
  Output: 修改上面的图形将形状设置为1.这允许空心圆圈。
  CorrectAnswer: ggplot(mtcars,aes(x=wt,y=mpg,color=factor(cyl),size=4))+geom_point(shape=1)
  AnswerTests: omnitest(correctExpr='ggplot(mtcars,aes(x=wt,y=mpg,color=factor(cyl),size=4))+geom_point(shape=1)')
  Hint: ggplot(mtcars,aes(x=wt,y=mpg,color=factor(cyl),size=4))+geom_point(shape=1)

- Class: cmd_question
  Output: 修改上一个绘图，不设置shape，而是将alpha设置为0.6
  CorrectAnswer: ggplot(mtcars,aes(x=wt,y=mpg,color=factor(cyl),size=4,alpha=0.6))+geom_point()
  AnswerTests: omnitest(correctExpr='ggplot(mtcars,aes(x=wt,y=mpg,color=factor(cyl),size=4,alpha=0.6))+geom_point()')
  Hint: ggplot(mtcars,aes(x=wt,y=mpg,color=factor(cyl),size=4,alpha=0.6))+geom_point()

- Class: text
  Output: 在之前的练习中，我们定义了四种图形重叠的情况，在这四种情况下，您必须调整图形中的重叠。使用diamonds数据集中考虑最后两个：
    大数据集和在单一轴上对齐数据值

- Class: cmd_question
  Output: 首先制作price（y）与carat（x）的基本散点图并将alpha设置为0.5,颜色color映射到clarity。 这是处理大数据集的一个好的开始。
  CorrectAnswer: ggplot(diamonds,aes(carat,price,alpha=0.5,color=clarity))+geom_point()
  AnswerTests: omnitest(correctExpr='ggplot(diamonds,aes(carat,price,alpha=0.5,color=clarity))+geom_point()')
  Hint: ggplot(diamonds,aes(carat,price,alpha=0.5,color=clarity))+geom_point()
  
- Class: cmd_question
  Output: 通过绘制carat（y）与clarity（x）的关系，将所有钻石对准clarity级别。 将price映射到color上。 alpha设为0.5。
  CorrectAnswer: ggplot(diamonds,aes(x=clarity,y=carat,alpha=0.5,color=price))+geom_point()
  AnswerTests: omnitest(correctExpr='ggplot(diamonds,aes(x=clarity,y=carat,alpha=0.5,color=price))+geom_point()')
  Hint: ggplot(diamonds,aes(x=clarity,y=carat,alpha=0.5,color=price))+geom_point(position="jitter")
  
- Class: cmd_question
  Output: 在前面的图中，所有单一的值都在每个clarity类别的单个轴上排列，所以您还没有解决重叠绘图。 修改上面的图，
    使用geom_point（）中的position =“jitter”。
  CorrectAnswer: ggplot(diamonds,aes(x=clarity,y=carat,alpha=0.5,color=price))+geom_point(position="jitter")
  AnswerTests: omnitest(correctExpr='ggplot(diamonds,aes(x=clarity,y=carat,alpha=0.5,color=price))+geom_point(position="jitter")')
  Hint: ggplot(diamonds,aes(x=clarity,y=carat,alpha=0.5,color=price))+geom_point(position="jitter")
  
- Class: mult_question
  Output: 确定将这次练习的结果提交吗?
  CorrectAnswer: NULL
  AnswerChoices: Yes;No
  AnswerTests: post_on_demand()
  Hint: ""
